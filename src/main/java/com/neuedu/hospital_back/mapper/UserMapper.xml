<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.hospital_back.mapper.UserMapper">

    <select id="getAllUser" resultType="com.neuedu.hospital_back.po.User">
    select `uId`, uNickName, uPassword, uName, isDoctor, uCategory from user
  </select>

    <select id="getUserById" resultType="com.neuedu.hospital_back.po.User">
        select `uId`, uNickName, uPassword, uName, isDoctor, uCategory from user where `uId`= #{uId}
    </select>

    <select id="getUserCount" resultType="Integer">
        select count(*) from user;
    </select>

    <select id="getUserByPage" resultType="com.neuedu.hospital_back.po.User">
        select `uId`, uNickName, uPassword, uName, isDoctor, uCategory from user  limit #{begin}, #{pageSize}
    </select>


    <select id="getAvailableDoctor" resultType="com.neuedu.hospital_back.po.User">
        select distinct `uId`, uNickName, uPassword, uName, isDoctor, uCategory from user
        where `uId` in (
        select `uId` from doctor where rLName = #{rLName} and isDue = true
        and `uId` in (select `uId` from department_user where dId = #{dId})
        and `uId` in (select `uId` from  arrangement where dId = #{dId}
                and (plan / pow(2 * (#{index} - 1), 2)) % pow(2 * #{index}, 2) > 0)
        )
    </select>

    <select id="getUerByDIdAndRLName" resultType="com.neuedu.hospital_back.po.User">
        select distinct `uId`, uNickName, uPassword, uName, isDoctor, uCategory from user
        where `uId` in (select `uId` from doctor where rLName = #{rLName} and isDue = true
        and `uId` in (select `uId` from department_user where dId = #{dId}))
    </select>

    <delete id="deleteByuId" parameterType="java.lang.Integer">
    delete from user
    where `uId` = #{uId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" keyColumn="uId" keyProperty="uId" useGeneratedKeys="true">
        insert into user (uNickName, uPassword, uName,
          isDoctor, uCategory)
        values (#{uNickName,jdbcType=VARCHAR}, #{uPassword,jdbcType=VARCHAR}, #{uName,jdbcType=VARCHAR},
          #{isDoctor,jdbcType=BOOLEAN}, #{uCategory,jdbcType=VARCHAR})
  </insert>
    <update id="updateUser">
        update user
        <set>
            <if test="uNickName != null">
                uNickName = #{uNickName,jdbcType=VARCHAR},
            </if>
            <if test="uPassword != null">
                uPassword = #{uPassword,jdbcType=VARCHAR},
            </if>
            <if test="uName != null">
                uName = #{uName,jdbcType=VARCHAR},
            </if>
            <if test="uCategory != null">
                uCategory = #{uCategory,jdbcType=VARCHAR},
            </if>
        </set>
        where `uId` = #{uId,jdbcType=INTEGER}
    </update>


</mapper>